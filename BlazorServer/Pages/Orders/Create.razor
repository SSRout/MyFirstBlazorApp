@page   "/Order/Create"
@inject IFoodData  foodData
@inject IOrderData orderData
@inject NavigationManager navMgr
<h3>Create</h3>

<EditForm Model="@order" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary Model="@order"></ValidationSummary>
    <div class="form-group">
        <label class="control-label">Item to Order</label>
        <select @onchange="FoodItemChange" class="form-control">
            <option value="">Select a Meal...</option>
            @foreach (var f in foodItems)
            {
                <option value="@f.Id">@f.Title</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label class="control-label">Quantity</label>
        <InputNumber class="form-control" @bind-Value="order.Quantity"></InputNumber>
        <ValidationMessage For="@(()=>order.Quantity)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-group">
        <label class="control-label">Order Name</label>
        <InputText class="form-control" @bind-Value="order.OrderName" />
        <ValidationMessage For="@(()=>order.OrderName)" class="text-danger"></ValidationMessage>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-outline-info" value="Order Food" />
    </div>
</EditForm>

@code {
    private OrderModel order = new OrderModel();
    private List<FoodModel> foodItems = new List<FoodModel>();

    protected override async Task OnParametersSetAsync()
    {
        foodItems = await foodData.GetFood();
    }

    private async Task HandleValidSubmit()
    {
        order.Total = order.Quantity * foodItems.Where(x => x.Id == order.FoodId).First().Price;
        int id = await orderData.CreateOrder(order);
        navMgr.NavigateTo($"Order/Display/{id}");
    }

    private void FoodItemChange(ChangeEventArgs e)
    {
        if (string.IsNullOrWhiteSpace(e.Value.ToString()) == false)
        {

            order.FoodId = int.Parse(e.Value.ToString());
        }
        else
        {
            order.FoodId = 0;
        }
    }
}
